{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js","Components/ContactList/ContactList.module.css","Components/Filter/Filte.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","isContactExist","alert","addNewContact","reset","className","style","formContact","onSubmit","this","inputLabel","type","onChange","pattern","title","required","contactInput","buttonInput","Component","ContactList","contacts","deleteContact","contactsList","map","contact","contactsItem","contactsDeleteBtn","id","onClick","Filter","divFilter","inputFilter","App","filter","contactName","some","toLowerCase","newContact","prevState","uuidv4","setFilter","filteredContacts","includes","console","log","prev","JSON","parse","localStorage","getItem","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8de5b64d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactInput\":\"ContactForm_contactInput__3GOJC\",\"buttonInput\":\"ContactForm_buttonInput__2Oj3V\",\"formContact\":\"ContactForm_formContact__1feZ7\",\"inputLabel\":\"ContactForm_inputLabel__27jdq\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.props.isContactExist(this.state.name)) {\r\n      alert(`${this.state.name} is already in contacts!`);\r\n    } else {\r\n      this.props.addNewContact(this.state);\r\n      this.reset();\r\n    }\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={style.formContact} onSubmit={this.handleSubmit}>\r\n        <label className={style.inputLabel}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={this.handleChange}\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            className={style.contactInput}\r\n          />\r\n        </label>\r\n        <label className={style.inputLabel}>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            onChange={this.handleChange}\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            className={style.contactInput}\r\n          />\r\n        </label>\r\n        <button className={style.buttonInput} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nContactForm.propTypes = {\r\n  addNewContact: PropTypes.func.isRequired,\r\n  isContactExist: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <ul className={style.contactsList}>\r\n      {contacts.map(contact => (\r\n        <li className={style.contactsItem} key={contact.id}>\r\n          <p>{contact.name + ': ' + contact.number}</p>\r\n          <button\r\n            className={style.contactsDeleteBtn}\r\n            id={contact.id}\r\n            type=\"button\"\r\n            onClick={deleteContact}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport style from './Filte.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <div className={style.divFilter}>\r\n      <label className={style.inputLabel}>\r\n        Find contacts by name\r\n        <input\r\n          className={style.inputFilter}\r\n          type=\"text\"\r\n          value={value}\r\n          name=\"search\"\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\nimport style from './index.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      // { id: uuidv4(), name: 'Rosie Simpson', number: '459-12-56' },\n      // { id: uuidv4(), name: 'Hermione Kline', number: '443-89-12' },\n      // { id: uuidv4(), name: 'Eden Clements', number: '645-17-79' },\n      // { id: uuidv4(), name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  isContactExist = contactName =>\n    this.state.contacts.some(contact => contact.name.toLowerCase() === contactName.toLowerCase());\n\n  addNewContact = newContact => {\n    this.setState(prevState => {\n      return { contacts: [...prevState.contacts, { id: uuidv4(), ...newContact }] };\n    });\n  };\n\n  setFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  filteredContacts = () =>\n    this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase()),\n    );\n\n  deleteContact = e => {\n    console.log(e.target.id);\n    this.setState(prev => ({\n      contacts: prev.contacts.filter(contact => contact.id !== e.target.id),\n    }));\n  };\n\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem('contacts'));\n    if (contacts) {\n      this.setState({ contacts });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div className={'bgImg'}>\n          <h1>Phonebook</h1>\n          <ContactForm addNewContact={this.addNewContact} isContactExist={this.isContactExist} />\n          <h2>Contacts </h2>\n          <Filter value={this.state.filter} onChange={this.setFilter} />\n          <ContactList contacts={this.filteredContacts()} deleteContact={this.deleteContact} />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport { v4 as uuidv4 } from 'uuid';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__x_VMC\",\"contactsItem\":\"ContactList_contactsItem__3QwiQ\",\"contactsDeleteBtn\":\"ContactList_contactsDeleteBtn__2anxs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputFilter\":\"Filte_inputFilter__aSaWq\",\"inputLabel\":\"Filte_inputLabel__2Bady\",\"divFilter\":\"Filte_divFilter__17m0D\"};"],"sourceRoot":""}